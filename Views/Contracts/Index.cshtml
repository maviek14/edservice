@model IEnumerable<PlatformService.Models.Contract>

@{
    ViewData["Title"] = "Index";
}

@if (User.IsInRole("User"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<h2>Contracts you have created</h2>
@if (User.IsInRole("User"))
{
    if (Model.Where(c => c.Principal.UserName.Equals(User.Identity.Name)).Count() > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Device.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Mandatory)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Where(c => c.Principal.UserName.Equals(User.Identity.Name)))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Device.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Mandatory.UserName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            <button class="btn btn-outline-primary">
                                <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                            </button>

                            @if (item.Status == PlatformService.Models.ContractStatus.Available)
                            {
                                <button class="btn btn-outline-warning">
                                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                                </button>
                                <button class="btn btn-outline-danger">
                                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                                </button>
                            }

                            @if (item.Status == PlatformService.Models.ContractStatus.Taken)
                            {
                                <button class="btn btn-outline-dark">
                                    <a asp-action="Cancel" asp-route-id="@item.ID">Cancel</a>
                                </button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>
            You have not created any contracts yet.
        </p>
    }
}
else
{
    <p>
        Administrator cannot create any contracts.
    </p>
}

<h2>Contracts you have taken</h2>
@if (User.IsInRole("User"))
{
    if (Model.Where(c => c.Mandatory != null && c.Mandatory.UserName.Equals(User.Identity.Name)).Count() > 0)
    {
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Device.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Principal.UserName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.Where(c => c.Mandatory != null && c.Mandatory.UserName.Equals(User.Identity.Name)))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Device.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Principal.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        <button class="btn btn-outline-primary">
                            <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                        </button>

                        @if (item.Status == PlatformService.Models.ContractStatus.Taken)
                        {
                            <button class="btn btn-outline-success">
                                <a asp-action="Complete" asp-route-id="@item.ID">Complete</a>
                            </button>
                            <button class="btn btn-outline-dark">
                                <a asp-action="Cancel" asp-route-id="@item.ID">Cancel</a>
                            </button>
                        }
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>
            You have not taken any contracts yet.
        </p>
    }
}
else
{
    <p>
        Administrator cannot take any contracts.
    </p>
}

<h2>Other Users' Contracts</h2>
@if (User.IsInRole("User"))
{
    if (Model.Where(c => !c.Principal.UserName.Equals(User.Identity.Name) && (c.Mandatory is null || !c.Mandatory.UserName.Equals(User.Identity.Name))).Count() > 0)
    {
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Device.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.Where(c => !c.Principal.UserName.Equals(User.Identity.Name) && (c.Mandatory is null || !c.Mandatory.UserName.Equals(User.Identity.Name))))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Device.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        <button class="btn btn-outline-primary">
                            <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                        </button>

                        @if (item.Status == PlatformService.Models.ContractStatus.Available)
                        {
                            <button class="btn btn-outline-info">
                                <a asp-action="Take" asp-route-id="@item.ID">Take</a>
                            </button>
                        }
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>
            There are not any available contracts yet.
        </p>
    }
}
else
{
    if (Model.Count() > 0)
    {
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Device.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Device.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        <button class="btn btn-outline-primary">
                            <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                        </button>
                        <button class="btn btn-outline-danger">
                            <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                        </button>
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>
            There are not any available contracts yet.
        </p>
    }
}